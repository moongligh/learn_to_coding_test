'''
  <문제> 1이 될 때까지
  어떠한 수 N이 1이 될 때까지 다음의 두 과정 중 하나를 반복적으로 선택하여 수행하려고 합니다.
  단, 두번째 연산은 N이 K로 나누어 떨어질 때만 선택할 수 있습니다.
  (1. N에서 1을 뺍니다.)
  (2. N을 K로 나눕니다.)

  입력조건: 첫째 줄에 N(1 =< N =< 100000)과 K(2<= K <= 100000)가 공백을 기준으로 하여 각각 자연수로 주어집니다.
  
  출력조건: 첫째 줄에 N이 1이 될 때까지 1번 혹은 2번의 과정을 수행해야 하는 횟수의 최솟값을 출력합니다.
'''
N, K = map(int, input().split())
result = 0

while True:
  target = (N//K)*K #K로 나누어 떨어지는 가장 가까운 수를 구하기
  result +=(N-target) #K로 나누어 떨어지는 가장 가까운 수를 만들기 위해 1번과정을 반복한 횟수
  N = target

  if N<K: #N이 K보다 작을 경우 반복문 탈출
    break
  
  result += 1
  N = N//K

result += N-1 #남은수가 1이 될 때까지 뺄 횟수(N-1)
print(result)