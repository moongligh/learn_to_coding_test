'''
  <문제> 떡볶이 떡 만들기
  동빈이네 떡볶이 떡은 재밌게도 떡볶이 떡의 길이가 일정하지 않습니다.
  대신에 한 봉지 안에 들어가는 떡의 총 길이는 절단기로 맞춰줍니다.
  절단기에 높이를 지정하면 줄지어진 떡을 한 번에 절단합니다.
  (높이가 H보다 긴 떡은 H위의 부분이 잘릴 것이고, 낮은 떡은 잘리지 않습니다.)

 높이가 19, 14, 10, 17인 떡이 나란히 있고 절단기 높이를 15로 지정하면 자른 뒤 떡의 높이는 15, 14, 10, 15가 될 것입니다.
  잘린 떡의 길이는 차례대로 4, 0, 0, 2입니다.
  손님은 6만큼의 길이를 가져갑니다.
  손님이 왔을 때 요청한 총 길이가 M일 때 적어도 M 만큼의 떡을 얻기 위해 절단기에 설정할 수 있는 높이의 최댓값을 구하는 프로그램을 작성하세요.

  입력조건: 첫째 줄에 떡의 개수 N과 요청한 떡의 길이 M이 주어집니다.
  (1 <= N <= 1000000, 1 <= M <= 2000000000)
  둘째 줄에는 떡의 개별 높이가 주어집니다.
  떡 높이의 총합은 항상 M 이상이므로, 손님은 필요한 양만큼 떡을 사갈 수 있습니다.
  높이는 10억보다 작거나 같은 양의 정수 또는 0입니다.
    
  출력조건: 적어도 M만큼의 떡을 집에 가져가기 위해 절단기에 설정할 수 있는 높이의 최댓값을 출력합니다.
'''

N, M = map(int, input().split())
array = list(map(int, input().split()))

#이진 탐색을 위한 시작점과 끝점 설정
start = 0
end = max(array)

result = 0
while(start <= end):
  total = 0
  mid = (start + end) // 2

  for i in array: 
    if i > mid: #잘랐을 때의 떡의 양 계산
      total += (i - mid)

  if total < M: #잘린 떡의 양이 부족한 경우 더 많이 자르기(왼쪽 부분 탐색)
    end = mid - 1

  else: #잘린 떡의 양이 많은 경우 더 적게 자르기(오른쪽 부분 탐색)
    result = mid
    start = mid + 1

print(result)