'''
  <문제> 효율적인 화폐 구성
  N가지 종류의 화폐가 있습니다.
  이 화폐들의 개수를 최소한으로 이용해서 그 가치의 합이 M원이 되도록 하려고 합니다.
  이때 각 종류의 화폐는 몇 개라도 사용할 수 있습니다.
  M원을 만들기 위한 최소한의 화폐 개수를 출력하는 프로그램을 작성하세요.

  입력조건: 첫째 줄에 N, M이 주어진다.(1 <= N <= 100, 1 <= M <= 10000)
  이후의 N개의 줄에는 각 화폐의 가치가 주어진다.
  화폐의 가치는 10000보다 작거나 같은 자연수이다.
  
  출력조건: 첫째 줄에 최소 화폐 개수를 출력한다.
  불가능할 때는 -1을 출력한다.
'''

N, M = map(int, input().split())
array = [] #N개의 화폐 단위 정보를 입력받는 리스트

for i in range(N):
  array.append(int(input()))

dp = [10001] * (M + 1) #계산된 결과를 저장하기 위한 DP 테이블 초기화

dp[0] = 0
for i in range(N): #바텀업 다이나믹 프로그래밍 진행
  for j in range(array[i], M + 1):
    if dp[j - array[i]] != 10001: #해당 화폐로 (i - k)원을 만드는 방법이 존재하는 경우
      dp[j] = min(dp[j], dp[j - array[i]] + 1) #저장된 화폐와 비교해서 더 작은수를 저장

if dp[M] == 10001: # 최종적으로 M원을 만드는 방법이 없는 경우 -1을 출력
  print(-1)
else:
  print(dp[M])