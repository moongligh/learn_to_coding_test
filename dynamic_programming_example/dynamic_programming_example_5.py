'''
  <문제> 병사 배치하기
  N명의 병사가 무작위로 나열되어 있습니다.
  각 병사는 특정한 값의 전투력을 보유하고 있습니다.
  병사를 배치할 때는 앞쪽에 있는 병사의 전투력이 항상 뒤쪽에 있는 병사보다 높아야합니다.
  또한 배치 과정에서는 특정한 위치에 있는 병사를 열외시키는 방법을 이용합니다.
  그러면서도 남아 있는 병사의 수가 최대가 되도록 합니다.

  입력조건: 첫째 줄에 N이 주어집낟. (1 <= N <= 2000)
  둘째 줄에 각 병사의 전투력이 공백으로 구분되어 차례대로 주어집니다.
  각 병사의 전투력은 10000000보다 작거나 같은 자연수입니다.
  
  출력조건: 첫째 줄에 남아 있는 병사의 수가 최대가 되도록 하기 위해서 열외시켜야 하는 병사의 수를 출력합니다.
'''
N = int(input())
array = list(map(int, input().split()))
array.reverse() #순서를 뒤집어 '최장 증가 부분 수열' 문제로 변환하기

dp = [1] * N #다이나믹 프로그래밍을 위한 1차원 DP 테이블 초기화

#i번 인덱스에 해당하는 array의 원소를 마지막으로하는 최장 길이 수열 구하기
for i in range(1, N):
  for j in range(0, i):
    if array[j] < array[i]:
      dp[i] = max(dp[i], dp[j] + 1)

print(N - max(dp)) #입력받은 수에서 구할 수 있는 가장 긴 수열의 크기만큼 차감해서 결과를 도출