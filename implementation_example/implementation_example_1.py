'''
  <문제> 상하좌우
  여행가 A는 NxN 크기의 정사각형 공간 위에 서 있습니다. 이 공간은 1x1 크기의 정사각형으로 나누어져 있습니다. 가장 왼쪽 위 좌표는 (1,1)이며, 가장 오른쪽 아래 좌표는 (N, N)에 해당합니다.
  여행가 A는 상, 하, 좌, 우 방향으로 이동할 수 있으며, 시작 좌표는 항상 (1, 1)입니다.
  여행가 A의 계획서에는 하나의 줄에 띄어쓰기를 기준으로 하여 L, R, U, D 중 하나의 문자가 반복적으로 적혀있습니다.
  L: 왼쪽으로 한 칸 이동, R: 오른쪽으로 한 칸 이동, U: 위로 한 칸 이동, D: 아래로 한 칸 이동

  입력조건: 첫째 줄에 공간의 크기를 나타내는 N이 주어집니다. (1 <= N <= 100)
          둘째 줄에 여행가 A가 이동할 계획서 내용이 주어집니다.(1 <= 이동 횟수 <= 100)
          단, 정사각형 공간을 벗어나는 움직임은 무시합니다.
          

  출력조건: 여행가 A가 최종적으로 도착할 지점의 좌표 (X, Y)를 공백을 기준으로 구분하여 출력합니다. 
'''

N = int(input())
plans = list(input().split())
x, y = 1, 1

# R, L, U, D에 따른 이동 방향
move_types = ['R', 'L', 'U', 'D']
dx = [0, 0, -1, 1]
dy = [1, -1, 0, 0]

for plan in plans:
  for i in range(len(move_types)): #이번행동으로 옮겨지는 좌표 구하기
    if plan == move_types[i]:
      nx = x + dx[i]
      ny = y + dy[i]

  if nx < 1 or ny < 1 or nx > N or ny > N: #정사각형 공간을 벗어나는 경우 무시하기
    continue
    
  x, y = nx, ny

print(x, y)